<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnxoa.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAhvSURBVFhHpVcNVFVlFj0KAmKDjaIyqeUY6AzLcfAH/KlEHJeI+ZcYYyrq+BMwmYmKjOBPSE4a
        ktZk2pQOipiIAkH2EFAeoiai0uNfEwGtxkhX2moGHJI9+7z3oAEqyblrbXjvvnu/s88++5zvXpEHPN4S
        6fAO8S7xd+IBl2n/bX9lkBgRz+0iGxk8622RGgavJ74jga93iph4fu82kcAtIg+3f+X7XLlOxCZK5LnN
        IoVcHDsIBsU/iANdu+Jg9+7YZ2eH3fy+i3iT2CryLQnvfFWk7wMT8WfGL4kMiBbJi7UG3telC4zTp+NS
        bCy+NBhw02g046ucHFxLSMDF0FCkuruDiuAN4jULkVCi488i4sfgC0QmbRK5rRnt6dABRj8/XI+Px42U
        FHxJ1LaCnlPo76Xr1yPJxcWsiJKnEskbRLq0i8QIBp8i8gzZ32WdcYDyml58EZ/t3o3PiS/aAb2uescO
        ZAwebC6Nlu5lkZzlIo4/SaI/g4+l0Vjvf2nw921sYAoKQnXsVlzbFoNr22NwfftWC7bxnJ7f2hI1MTFQ
        VBNXt2zBsYEDscdKIlLk/SU/VY7fiTitEblENyOB+Hj8eFSuj0Bl9F9wOSoMl18JR+WmcNRsjkDNq5Go
        3kRsjETVhkhcXReBT9esQdmqVShdvRplYWHm7xUrV+IDJye8Zy1HsMjiST/UtrSrzVSRaJUrjviI7i5f
        GozysMW4sHwubhgNuFNehAurF6A8chGqooJR9XIIqtaFoHJNCCpWPI+CRYEoeW0z6mprUcDABfPno4wK
        Fvj6IpFrslVBU9+cJtKjTSkeE+lFt97hcEEScfbJ0SgK8odx/gRUGw6j6bhZXABj8CSYVk5D5do/4mrE
        LJSHzsTJQD/kR4Xju7t3zZfW3bqF4ySQO3kyTAEBMFCFfVyXcwRzmKh6rZmEE7Mfx3bR1tGLPmTti/zH
        I3/eGJxYNQ+NjfeaCeiHf148jfQ5Xji/9CmUho5D1nNeMEaGMHh9i+uunzqFI8OGoYClzHNzw2HrrHhF
        5IvhIg7NBGhN+1CRXG2bQ0Smox2K/YegaMFQpE1xw8mY8DYkrp8zImHqACRO6Q9DWCAaWgWvLS9F3EgP
        ZAwZhHOew5HXty/SuPZe67DyEflDd6sKHR4S6c4JV69uTSFO/EJwcbQtygJcUDi/HxJ9eyJz03I03mup
        xNXT2TgcOhsN9XUtFSorxk4vV6QP6438IY8hr6cTjquvtLOsKszgSGfZO+qI6sj2e0KnVzyRTuS5CD55
        SlAySVA+ywYXAx0R59MZaRteaEOiRWR++by0CLEMnOrlyMztcfZxrtdDkGMvyLD6S2fDMpHU3iK26gSb
        oSIBelLZHSVO9xOYvAWlUwSXZguuLBEULuKsJ6mD4UE/SuJaiQkbPZyRMobX+1qSOP97GvrXgpPdWNqO
        FoW1yzaKFLAV7NQHtk+ILNTaaP1VpjO8oZnAHEFlsKBmFTMhiRX87dg7b7VOHP+pq8Oy3/TB2yMFxYGC
        igD+9yOR0YKCQVyzjyC7k+ADrr+f4M5a2tVqRFsvbqF6Ul1qUAUeJfsnWYKnLQpUBvHzn8l8AnfDORPN
        wX7oKM42INrDAcdnksA8QdkMQdF4wQVPquBKAnZiNqIqzS27kN7rbFbATcRXTx6xEsjrRRNqJpSx/Fmq
        MZd7AheKW8zgrQzXmkhFrgFvjHKA0Z8EZpH4ZEsp8n9LArYWj+lQ4sQ9Rv3NrWjDv64k0KAKqAeyH+IN
        HiQxVnCOMiZygcSgtsFrr5iQu2t1mxa9csqAd70dkDuNCkxnGcaxBANpQnpAS6AEAkXe7GT1gO7VPbgB
        mZSAXvCRjSCX7j05nBcPpXGen9im1W5dNeHQn5yRRHU+3kVjthpW1WcM2O9DJSbSiFTvxCOW7NWE6jVP
        PuTYahfw0JHoNFPkdS1BKqF1MvySZAawLM94tgn+NYOnL3TGBRrzcjQXpz8uvteWRFXOESSzI/JoxKMO
        luSSLSa8Yy/SR0dA0zS07yYyigrc1YuURCpVSP0VZ8PATqjJTG4u9e1KEzLmOiOfrXklgt0RRRJrGYSd
        UrLnexINdd8id4U3Mih/Bk1tXtOKIJE4Zk0Pfn8ok15LRRI/tJZBmR4h62S2zyH3TvgsOxm3PzUhc4Yz
        8mgwE1uy7AW6PZSdQiVKlrPOPHeJJBr+/Q0KIr1xnAbM4hxIpvlUei0BSdT1FPEiAVqg5eHIvhzFnfCW
        tqKy1V0xqTOJkETKoE7IGNsNWSopJ2Q+SZxnixYuoMsZ+JPFLMNC+oFz4+ySXmYDZg1ja3MCamk1sWPE
        PBFuiOan5jaP8qqC80iRl7JF7unYVNYHiQPs3yS2Zqoba+nBicaanqC0ueyQvKmcG+z3M+x9hX5W46XT
        9Qf1PmvwLP7/m8h5G5F+jNMm+yYtdDQ++qzItpMijXqTekJJ7GcLJbA9D9HNyTRnGokcHcH6cmBljmW2
        PsyQn9Pcef3DJN3BMth0suYQbPMqps3HAPNz4Y++yOgPOp1cSeL103zpMFoX0cX0MW0vF97LzOKd+N2Z
        gajMgZ78zKDxlDuevythLaEmwDXU9RXOImO024j7PqIrCWXZn726jBncOGvNQoeU1tOsCKEPLwrdRZWc
        9rcqlkmcIgqo4lqRFA467nftC95UCiWhY7I35fAOEdlHJb5RIqqImqmpWzRTnRsqNb3THJi7a+EQET4E
        C3d78zvBfTNv2ROWOumkUse6ko0PX1g265sSjfUVs2xUImpW6/96Pk9WkGwC9xZOWnFXUxPqq//r5VVv
        1kXYpdLHuvAI1miCi8isR0Rmc4hNZ3qj+dtgoh/BU2YFf3bWrVX43+9KhF0knKJmSZWQBlKoSjrZNKiq
        1u6M/wv4Hj6o8kSkTwAAAABJRU5ErkJggg==
</value>
  </data>
</root>